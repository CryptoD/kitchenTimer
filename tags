!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
.kitchentimer-menu-box 	tasksTimer@CryptoD/stylesheet.css	/^.kitchentimer-menu-box {$/;"	c
.kitchentimer-menu-delete-icon 	tasksTimer@CryptoD/stylesheet.css	/^.kitchentimer-menu-delete-icon {$/;"	c
.kitchentimer-menu-icon 	tasksTimer@CryptoD/stylesheet.css	/^.kitchentimer-menu-icon {$/;"	c
.kitchentimer-menu-label 	tasksTimer@CryptoD/stylesheet.css	/^.kitchentimer-menu-label {$/;"	c
.kitchentimer-menu-name 	tasksTimer@CryptoD/stylesheet.css	/^.kitchentimer-menu-name {$/;"	c
.kitchentimer-panel-box 	tasksTimer@CryptoD/stylesheet.css	/^.kitchentimer-panel-box {$/;"	c
.kitchentimer-panel-label 	tasksTimer@CryptoD/stylesheet.css	/^.kitchentimer-panel-label {$/;"	c
.kitchentimer-panel-name 	tasksTimer@CryptoD/stylesheet.css	/^.kitchentimer-panel-name {$/;"	c
.kitchentimer-quick-layout 	tasksTimer@CryptoD/stylesheet.css	/^.kitchentimer-quick-layout {$/;"	c
0	tasksTimer@CryptoD/timers.js	/^    0$/;"	V
AM	tasksTimer@CryptoD/alarm_timer.js	/^  AM: 1,$/;"	P
AlarmTimer	tasksTimer@CryptoD/alarm_timer.js	/^class AlarmTimer {$/;"	C
AmPm	tasksTimer@CryptoD/alarm_timer.js	/^var AmPm = {$/;"	O
Annoyer	tasksTimer@CryptoD/notifier.js	/^class Annoyer {$/;"	C
Clutter	tasksTimer@CryptoD/extension.js	/^const { GObject, St, Clutter } = imports.gi;$/;"	V
Clutter	tasksTimer@CryptoD/indicator.js	/^const { GObject, St, Clutter, Gio } = imports.gi;$/;"	V
Clutter	tasksTimer@CryptoD/menuitem.js	/^const { Clutter, GObject, St, Gio } = imports.gi;$/;"	V
Clutter	tasksTimer@CryptoD/menus.js	/^const { St, Clutter } = imports.gi;$/;"	V
Clutter	tasksTimer@CryptoD/timers.js	/^const {GLib, St, Clutter} = imports.gi;$/;"	V
DURATION	tasksTimer@CryptoD/prefs.js	/^  DURATION: 2,$/;"	P
ENABLED	tasksTimer@CryptoD/prefs.js	/^  ENABLED: 3,$/;"	P
EXPIRED	tasksTimer@CryptoD/timers.js	/^  EXPIRED: 3$/;"	P
Extension	tasksTimer@CryptoD/extension.js	/^class Extension {$/;"	C
GETTEXT_DOMAIN	tasksTimer@CryptoD/extension.js	/^const GETTEXT_DOMAIN = 'kitchen-timer-blackjackshellac';$/;"	V
GETTEXT_DOMAIN	tasksTimer@CryptoD/indicator.js	/^const GETTEXT_DOMAIN = 'kitchen-timer-blackjackshellac';$/;"	V
GETTEXT_DOMAIN	tasksTimer@CryptoD/menus.js	/^const GETTEXT_DOMAIN = 'kitchen-timer-blackjackshellac';$/;"	V
GETTEXT_DOMAIN	tasksTimer@CryptoD/notifier.js	/^const GETTEXT_DOMAIN = 'kitchen-timer-blackjackshellac';$/;"	V
GETTEXT_DOMAIN	tasksTimer@CryptoD/prefs.js	/^const GETTEXT_DOMAIN = 'kitchen-timer-blackjackshellac';$/;"	V
GETTEXT_DOMAIN	tasksTimer@CryptoD/settings.js	/^const GETTEXT_DOMAIN = 'kitchen-timer-blackjackshellac';$/;"	V
GETTEXT_DOMAIN	tasksTimer@CryptoD/timers.js	/^const GETTEXT_DOMAIN = 'kitchen-timer-blackjackshellac';$/;"	V
GETTEXT_DOMAIN	tasksTimer@CryptoD/utils.js	/^const GETTEXT_DOMAIN = 'kitchen-timer-blackjackshellac';$/;"	V
GLib	tasksTimer@CryptoD/notifier.js	/^const { GLib, GObject } = imports.gi;$/;"	V
GLib	tasksTimer@CryptoD/prefs.js	/^const { Gio, Gtk, GLib } = imports.gi;$/;"	V
GLib	tasksTimer@CryptoD/timers.js	/^const {GLib, St, Clutter} = imports.gi;$/;"	V
GObject	tasksTimer@CryptoD/extension.js	/^const { GObject, St, Clutter } = imports.gi;$/;"	V
GObject	tasksTimer@CryptoD/indicator.js	/^const { GObject, St, Clutter, Gio } = imports.gi;$/;"	V
GObject	tasksTimer@CryptoD/menuitem.js	/^const { Clutter, GObject, St, Gio } = imports.gi;$/;"	V
GObject	tasksTimer@CryptoD/notifier.js	/^const { GLib, GObject } = imports.gi;$/;"	V
Gio	tasksTimer@CryptoD/indicator.js	/^const { GObject, St, Clutter, Gio } = imports.gi;$/;"	V
Gio	tasksTimer@CryptoD/menuitem.js	/^const { Clutter, GObject, St, Gio } = imports.gi;$/;"	V
Gio	tasksTimer@CryptoD/prefs.js	/^const { Gio, Gtk, GLib } = imports.gi;$/;"	V
Gtk	tasksTimer@CryptoD/prefs.js	/^const { Gio, Gtk, GLib } = imports.gi;$/;"	V
H24	tasksTimer@CryptoD/alarm_timer.js	/^  H24: 0,$/;"	P
HMS	tasksTimer@CryptoD/hms.js	/^class HMS {$/;"	C
ID	tasksTimer@CryptoD/prefs.js	/^  ID: 1,$/;"	P
INIT	tasksTimer@CryptoD/timers.js	/^  INIT: 0,$/;"	P
KTTypes	tasksTimer@CryptoD/menuitem.js	/^var KTTypes = {$/;"	O
KitchenTimerControlButton	tasksTimer@CryptoD/menuitem.js	/^class KitchenTimerControlButton extends St.Button {$/;"	C
KitchenTimerCreatePreset	tasksTimer@CryptoD/menuitem.js	/^class KitchenTimerCreatePreset extends PopupMenu.PopupSubMenuMenuItem {$/;"	C
KitchenTimerIndicator	tasksTimer@CryptoD/indicator.js	/^class KitchenTimerIndicator extends PanelMenu.Button {$/;"	C
KitchenTimerMenuItem	tasksTimer@CryptoD/menuitem.js	/^class KitchenTimerMenuItem extends PopupMenu.PopupMenuItem {$/;"	C
KitchenTimerNotifier	tasksTimer@CryptoD/notifier.js	/^class KitchenTimerNotifier extends MessageTray.Notification {$/;"	C
KitchenTimerQuickItem	tasksTimer@CryptoD/menuitem.js	/^class KitchenTimerQuickItem extends PopupMenu.PopupMenuItem {$/;"	C
KitchenTimerTimeSliderItem	tasksTimer@CryptoD/menuitem.js	/^class KitchenTimerTimeSliderItem extends PopupMenu.PopupMenuItem {$/;"	C
LOGID	tasksTimer@CryptoD/logger.js	/^const LOGID = 'logger';$/;"	V
Logger	tasksTimer@CryptoD/logger.js	/^class Logger {$/;"	C
Model	tasksTimer@CryptoD/prefs.js	/^const Model = {$/;"	O
NAME	tasksTimer@CryptoD/prefs.js	/^  NAME: 0,$/;"	P
PM	tasksTimer@CryptoD/alarm_timer.js	/^  PM: 2$/;"	P
PanelMenuBuilder	tasksTimer@CryptoD/menus.js	/^class PanelMenuBuilder {$/;"	C
PreferencesBuilder	tasksTimer@CryptoD/prefs.js	/^class PreferencesBuilder {$/;"	C
QUICK	tasksTimer@CryptoD/prefs.js	/^  QUICK: 4$/;"	P
RESET	tasksTimer@CryptoD/timers.js	/^  RESET: 1,$/;"	P
RUNNING	tasksTimer@CryptoD/timers.js	/^  RUNNING: 2,$/;"	P
Settings	tasksTimer@CryptoD/settings.js	/^class Settings {$/;"	C
St	tasksTimer@CryptoD/extension.js	/^const { GObject, St, Clutter } = imports.gi;$/;"	V
St	tasksTimer@CryptoD/indicator.js	/^const { GObject, St, Clutter, Gio } = imports.gi;$/;"	V
St	tasksTimer@CryptoD/menuitem.js	/^const { Clutter, GObject, St, Gio } = imports.gi;$/;"	V
St	tasksTimer@CryptoD/menus.js	/^const { St, Clutter } = imports.gi;$/;"	V
St	tasksTimer@CryptoD/timers.js	/^const {GLib, St, Clutter} = imports.gi;$/;"	V
TODO	tasksTimer@CryptoD/menus.js	/^  \/\/ TODO figure out how to reset timer$/;"	T
TODO	tasksTimer@CryptoD/prefs.js	/^        \/\/ TODO update with initial value$/;"	T
TODO	tasksTimer@CryptoD/prefs.js	/^      \/\/ TODO fix this duplication$/;"	T
TODO	tasksTimer@CryptoD/settings.js	/^        \/\/ TODO what if it's empty?$/;"	T
TODO	tasksTimer@CryptoD/settings.js	/^      \/\/ TODO what if it's empty?$/;"	T
TODO	tasksTimer@CryptoD/timers.js	/^        \/\/ TODO prompt to reset$/;"	T
Timer	tasksTimer@CryptoD/timers.js	/^class Timer {$/;"	C
TimerState	tasksTimer@CryptoD/timers.js	/^var TimerState = {$/;"	O
Timers	tasksTimer@CryptoD/timers.js	/^class Timers extends Array {$/;"	C
_addItem	tasksTimer@CryptoD/menus.js	/^  _addItem(text, menu=undefined) {$/;"	M
_addSeparator	tasksTimer@CryptoD/menus.js	/^  _addSeparator(menu=undefined) {$/;"	M
_addSubMenu	tasksTimer@CryptoD/menus.js	/^  _addSubMenu(text, menu=undefined) {$/;"	M
_addSwitch	tasksTimer@CryptoD/menus.js	/^  _addSwitch(text, on=false, menu=undefined) {$/;"	M
_bind	tasksTimer@CryptoD/prefs.js	/^    _bind() {$/;"	M
_bo	tasksTimer@CryptoD/prefs.js	/^    _bo(id) {$/;"	M
_connectSignal	tasksTimer@CryptoD/utils.js	/^    prototype._connectSignal = function (subject, signal_name, method) {$/;"	M
_disconnectSignals	tasksTimer@CryptoD/utils.js	/^    prototype._disconnectSignals = function () {$/;"	M
_getMenu	tasksTimer@CryptoD/menus.js	/^  _getMenu(menu) {$/;"	M
_get_active_liststore_entry	tasksTimer@CryptoD/prefs.js	/^    _get_active_liststore_entry() {$/;"	M
_init	tasksTimer@CryptoD/indicator.js	/^    _init() {$/;"	M
_init	tasksTimer@CryptoD/menuitem.js	/^    _init(timer, type) {$/;"	M
_init	tasksTimer@CryptoD/menuitem.js	/^  _init(menu, timers) {$/;"	M
_init	tasksTimer@CryptoD/menuitem.js	/^  _init(parent, suffix, min, max) {$/;"	M
_init	tasksTimer@CryptoD/menuitem.js	/^  _init(timer, menu) {$/;"	M
_init	tasksTimer@CryptoD/notifier.js	/^  _init(timer, source, title, banner, params) {$/;"	M
_initPlayer	tasksTimer@CryptoD/notifier.js	/^  _initPlayer() {$/;"	M
_log	tasksTimer@CryptoD/logger.js	/^    _log(level, format, ...args) {$/;"	M
_lookup	tasksTimer@CryptoD/timers.js	/^    this._lookup = {};$/;"	P
_populate_liststore	tasksTimer@CryptoD/prefs.js	/^    _populate_liststore() {$/;"	M
_progressIconsDegrees	tasksTimer@CryptoD/indicator.js	/^        this._progressIconsDegrees = {};$/;"	P
_reset_timer	tasksTimer@CryptoD/menus.js	/^  _reset_timer() {$/;"	M
_run_timer	tasksTimer@CryptoD/menus.js	/^  _run_timer() {$/;"	M
_save_liststore	tasksTimer@CryptoD/prefs.js	/^    _save_liststore(pack=true) {$/;"	M
_ssb	tasksTimer@CryptoD/prefs.js	/^    _ssb(key, object, property, flags=Gio.SettingsBindFlags.DEFAULT) {$/;"	M
_update_active_listore_entry	tasksTimer@CryptoD/prefs.js	/^    _update_active_listore_entry(timer) {$/;"	M
_update_active_liststore_from_tab	tasksTimer@CryptoD/prefs.js	/^    _update_active_liststore_from_tab() {$/;"	M
_update_combo_model_entry	tasksTimer@CryptoD/prefs.js	/^    _update_combo_model_entry(combo, iter, entry) {$/;"	M
_update_spinners	tasksTimer@CryptoD/prefs.js	/^    _update_spinners(hms) {$/;"	M
_update_timers_tab_from_model	tasksTimer@CryptoD/prefs.js	/^    _update_timers_tab_from_model(timers_combo, entry=undefined) {$/;"	M
action	tasksTimer@CryptoD/timers.js	/^    var action;$/;"	V
activate_go	tasksTimer@CryptoD/menuitem.js	/^  activate_go() {$/;"	M
add	tasksTimer@CryptoD/timers.js	/^  add(timer) {$/;"	M
addSignalsHelperMethods	tasksTimer@CryptoD/utils.js	/^function addSignalsHelperMethods(prototype) {$/;"	F
addTimerStart	tasksTimer@CryptoD/menuitem.js	/^  static addTimerStart(result, timers) {$/;"	M
add_check_dupes	tasksTimer@CryptoD/timers.js	/^  add_check_dupes(timer) {$/;"	M
adjust	tasksTimer@CryptoD/hms.js	/^  adjust() {$/;"	M
adjust_minutes	tasksTimer@CryptoD/hms.js	/^  adjust_minutes(mins) {$/;"	M
adjust_seconds	tasksTimer@CryptoD/hms.js	/^  adjust_seconds(secs) {$/;"	M
alarm_date	tasksTimer@CryptoD/alarm_timer.js	/^    var alarm_date=new Date($/;"	V
alarm_timer	tasksTimer@CryptoD/alarm_timer.js	/^    var alarm_timer = new AlarmTimer();$/;"	V
alarm_timer	tasksTimer@CryptoD/menuitem.js	/^      alarm_timer: undefined$/;"	P
alarm_timer	tasksTimer@CryptoD/timers.js	/^  get alarm_timer() {$/;"	M
alarm_timer	tasksTimer@CryptoD/timers.js	/^  set alarm_timer(val) {$/;"	M
ampm	tasksTimer@CryptoD/alarm_timer.js	/^  get ampm() { return this._ampm; }$/;"	M
ampm	tasksTimer@CryptoD/alarm_timer.js	/^  set ampm(val) {$/;"	M
atimers	tasksTimer@CryptoD/settings.js	/^        var atimers = [];$/;"	A
atimers	tasksTimer@CryptoD/settings.js	/^      var atimers = [];$/;"	A
attach	tasksTimer@CryptoD/timers.js	/^  static attach(indicator) {$/;"	M
automatic_name	tasksTimer@CryptoD/timers.js	/^  automatic_name(hms) {$/;"	M
bin	tasksTimer@CryptoD/menuitem.js	/^    var bin = new St.Bin({ x_expand: false, x_align: St.Align.START });$/;"	V
bin	tasksTimer@CryptoD/menuitem.js	/^    var bin = new St.Bin({ x_expand: true, x_align: St.Align.START });$/;"	V
box	tasksTimer@CryptoD/menuitem.js	/^      var box = new St.BoxLayout({$/;"	V
box	tasksTimer@CryptoD/timers.js	/^  get box() {$/;"	M
build	tasksTimer@CryptoD/menus.js	/^  build() {$/;"	M
build	tasksTimer@CryptoD/prefs.js	/^    build() {$/;"	M
buildPrefsWidget	tasksTimer@CryptoD/prefs.js	/^function buildPrefsWidget() {$/;"	F
clearInterval	tasksTimer@CryptoD/utils.js	/^var clearTimeout, clearInterval;$/;"	V
clearTimeout	tasksTimer@CryptoD/utils.js	/^var clearTimeout, clearInterval;$/;"	V
constructor	tasksTimer@CryptoD/alarm_timer.js	/^  constructor(debug=false) {$/;"	M
constructor	tasksTimer@CryptoD/extension.js	/^    constructor(uuid) {$/;"	M
constructor	tasksTimer@CryptoD/hms.js	/^  constructor(secs=0) {$/;"	M
constructor	tasksTimer@CryptoD/logger.js	/^    constructor(logid=undefined, debug=false) {$/;"	M
constructor	tasksTimer@CryptoD/menus.js	/^  constructor(menu, indicator) {$/;"	M
constructor	tasksTimer@CryptoD/notifier.js	/^  constructor(timers) {$/;"	M
constructor	tasksTimer@CryptoD/prefs.js	/^    constructor() {$/;"	M
constructor	tasksTimer@CryptoD/settings.js	/^    constructor() {$/;"	M
constructor	tasksTimer@CryptoD/timers.js	/^  constructor(...args) {$/;"	M
constructor	tasksTimer@CryptoD/timers.js	/^  constructor(name, duration_secs, id=undefined) {$/;"	M
control_button	tasksTimer@CryptoD/menuitem.js	/^      var control_button;$/;"	V
create	tasksTimer@CryptoD/hms.js	/^  static create(h,m,s) {$/;"	M
create_folders	tasksTimer@CryptoD/prefs.js	/^        create_folders: true$/;"	P
create_icon	tasksTimer@CryptoD/menuitem.js	/^  static create_icon(indicator) {$/;"	M
create_icon	tasksTimer@CryptoD/menus.js	/^  create_icon() {$/;"	M
date_options	tasksTimer@CryptoD/timers.js	/^const date_options = { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' };$/;"	O
debug	tasksTimer@CryptoD/logger.js	/^    debug(format, ...args) {$/;"	M
debug	tasksTimer@CryptoD/settings.js	/^    get debug() {$/;"	M
debug	tasksTimer@CryptoD/settings.js	/^    set debug(bool) {$/;"	M
debugging	tasksTimer@CryptoD/logger.js	/^    get debugging() {$/;"	M
debugging	tasksTimer@CryptoD/logger.js	/^    set debugging(bool) {$/;"	M
default_timer	tasksTimer@CryptoD/settings.js	/^    get default_timer() {$/;"	M
default_timer	tasksTimer@CryptoD/settings.js	/^    set default_timer(val) {$/;"	M
degree_progress	tasksTimer@CryptoD/timers.js	/^  degree_progress(chunk=15) {$/;"	M
delete	tasksTimer@CryptoD/menuitem.js	/^    delete() {$/;"	M
delete	tasksTimer@CryptoD/timers.js	/^  delete() {$/;"	M
detach	tasksTimer@CryptoD/timers.js	/^  static detach() {$/;"	M
details	tasksTimer@CryptoD/notifier.js	/^                                              details,$/;"	V
detect_dupes	tasksTimer@CryptoD/settings.js	/^    get detect_dupes() {$/;"	M
detect_dupes	tasksTimer@CryptoD/settings.js	/^    set detect_dupes(bool) {$/;"	M
dict	tasksTimer@CryptoD/settings.js	/^      var dict = {};$/;"	O
die	install_local.sh	/^die() {$/;"	f
disable	tasksTimer@CryptoD/extension.js	/^    disable() {$/;"	M
disable	tasksTimer@CryptoD/timers.js	/^  disable() {$/;"	M
duration	tasksTimer@CryptoD/timers.js	/^  get duration() {$/;"	M
duration	tasksTimer@CryptoD/timers.js	/^  set duration(duration) {$/;"	M
duration_ms	tasksTimer@CryptoD/timers.js	/^  duration_ms() {$/;"	M
enable	tasksTimer@CryptoD/extension.js	/^    enable() {$/;"	M
enabled	tasksTimer@CryptoD/timers.js	/^  get enabled() {$/;"	M
enabled	tasksTimer@CryptoD/timers.js	/^  set enabled(bool) {$/;"	M
end_time	tasksTimer@CryptoD/timers.js	/^  end_time() {$/;"	M
error	tasksTimer@CryptoD/logger.js	/^    error(format, ...args) {$/;"	M
expired	tasksTimer@CryptoD/timers.js	/^  get expired() {$/;"	M
expired	tasksTimer@CryptoD/timers.js	/^  set expired(bool) {$/;"	M
export_json	tasksTimer@CryptoD/settings.js	/^    export_json() {$/;"	M
export_settings	tasksTimer@CryptoD/prefs.js	/^    export_settings() {$/;"	M
false	tasksTimer@CryptoD/prefs.js	/^                false,$/;"	V
file_dialog	tasksTimer@CryptoD/prefs.js	/^      var file_dialog = new Gtk.FileChooserDialog( {$/;"	V
format	tasksTimer@CryptoD/menuitem.js	/^  format(val) {$/;"	M
fromRegexGroups	tasksTimer@CryptoD/alarm_timer.js	/^  fromRegexGroups(g) {$/;"	M
fromResult	tasksTimer@CryptoD/timers.js	/^  static fromResult(result) {$/;"	M
fromSettingsTimer	tasksTimer@CryptoD/timers.js	/^  static fromSettingsTimer(settings_timer) {$/;"	M
get_default	tasksTimer@CryptoD/settings.js	/^    get_default(key) {$/;"	M
get_dupe	tasksTimer@CryptoD/timers.js	/^  get_dupe(timer) {$/;"	M
gicon	tasksTimer@CryptoD/indicator.js	/^    get gicon() {$/;"	M
gicon	tasksTimer@CryptoD/timers.js	/^        gicon: gicon,$/;"	P
go	tasksTimer@CryptoD/timers.js	/^  go(start=undefined) {$/;"	M
h	tasksTimer@CryptoD/settings.js	/^      var h={$/;"	O
h	tasksTimer@CryptoD/settings.js	/^      var h={};$/;"	O
h2s	tasksTimer@CryptoD/hms.js	/^  h2s() {$/;"	M
has_name	tasksTimer@CryptoD/timers.js	/^  get has_name() {$/;"	M
has_time	tasksTimer@CryptoD/menuitem.js	/^      has_time: false,$/;"	P
hms	tasksTimer@CryptoD/alarm_timer.js	/^    var hms = new HMS(duration_ms\/1000);$/;"	V
hms	tasksTimer@CryptoD/alarm_timer.js	/^  hms() {$/;"	M
hms	tasksTimer@CryptoD/hms.js	/^    var hms = new HMS(secs);$/;"	V
hms	tasksTimer@CryptoD/hms.js	/^    var hms = new HMS(this.toSeconds());$/;"	V
hms	tasksTimer@CryptoD/menuitem.js	/^      hms: null,$/;"	P
hms	tasksTimer@CryptoD/prefs.js	/^          var hms = new HMS();$/;"	V
hms	tasksTimer@CryptoD/prefs.js	/^        var hms = new HMS(duration);$/;"	V
hms	tasksTimer@CryptoD/timers.js	/^    var hms = new HMS(delta);$/;"	V
hms	tasksTimer@CryptoD/timers.js	/^    var hms = new HMS(this.duration);$/;"	V
hour	tasksTimer@CryptoD/alarm_timer.js	/^  get hour() { return this._hour; }$/;"	M
hour	tasksTimer@CryptoD/alarm_timer.js	/^  set hour(h) {$/;"	M
hours	tasksTimer@CryptoD/hms.js	/^  get hours() {$/;"	M
hours	tasksTimer@CryptoD/hms.js	/^  set hours(hours) {$/;"	M
hours	tasksTimer@CryptoD/menuitem.js	/^      hours: 0,$/;"	P
hover	tasksTimer@CryptoD/menuitem.js	/^      hover: false,$/;"	P
icon	tasksTimer@CryptoD/indicator.js	/^        var icon = new St.Icon({$/;"	V
icon	tasksTimer@CryptoD/menuitem.js	/^        var icon = new St.Icon({$/;"	V
icon	tasksTimer@CryptoD/menuitem.js	/^    get icon() {$/;"	M
icon	tasksTimer@CryptoD/menuitem.js	/^    var icon = new St.Icon({$/;"	V
icon	tasksTimer@CryptoD/menus.js	/^    var icon = new St.Icon({$/;"	V
icon	tasksTimer@CryptoD/timers.js	/^		  var icon = new St.Icon({$/;"	V
icon_name	tasksTimer@CryptoD/indicator.js	/^          var icon_name="\/icons\/kitchen-timer-"+deg+".svg";$/;"	V
icon_progress	tasksTimer@CryptoD/timers.js	/^  icon_progress() {$/;"	M
id	tasksTimer@CryptoD/timers.js	/^  get id() {$/;"	M
import_json	tasksTimer@CryptoD/settings.js	/^    import_json(json) {$/;"	M
import_settings	tasksTimer@CryptoD/prefs.js	/^    import_settings() {$/;"	M
indicator	tasksTimer@CryptoD/timers.js	/^  get indicator() {$/;"	M
indicator	tasksTimer@CryptoD/timers.js	/^  set indicator(indicator) {$/;"	M
info	bin/git_tag.sh	/^info() {$/;"	f
info	install_local.sh	/^info() {$/;"	f
info	tasksTimer@CryptoD/logger.js	/^    info(format, ...args) {$/;"	M
init	tasksTimer@CryptoD/extension.js	/^function init(meta) {$/;"	F
init	tasksTimer@CryptoD/prefs.js	/^function init() {$/;"	F
isDebugModeEnabled	tasksTimer@CryptoD/utils.js	/^function isDebugModeEnabled() {$/;"	F
isEmpty	tasksTimer@CryptoD/timers.js	/^  isEmpty() {$/;"	M
is_dupe	tasksTimer@CryptoD/timers.js	/^  is_dupe(timer) {$/;"	M
item	tasksTimer@CryptoD/menus.js	/^    var item = new PopupMenu.PopupMenuItem(text)$/;"	V
item	tasksTimer@CryptoD/menus.js	/^    var item = new PopupMenu.PopupSwitchMenuItem(text, on);$/;"	V
iter	tasksTimer@CryptoD/prefs.js	/^          var [ ok, iter ] = combo.get_active_iter();$/;"	V
iter	tasksTimer@CryptoD/prefs.js	/^          var [ ok, iter ] = model.iter_nth_child(null, index-1);$/;"	V
iter	tasksTimer@CryptoD/prefs.js	/^          var [ ok, iter ] = this.timers_combo.get_active_iter();$/;"	V
iter	tasksTimer@CryptoD/prefs.js	/^      var [ ok, iter ] = this.timers_combo.get_active_iter();$/;"	V
iter	tasksTimer@CryptoD/prefs.js	/^      var [ ok, iter ] = timers_combo.get_active_iter();$/;"	V
iter	tasksTimer@CryptoD/prefs.js	/^      var [ok, iter] = model.get_iter_first();$/;"	V
label	tasksTimer@CryptoD/timers.js	/^  get label() {$/;"	M
label	tasksTimer@CryptoD/timers.js	/^  set label(label) {$/;"	M
label_progress	tasksTimer@CryptoD/timers.js	/^  label_progress(hms, now=0) {$/;"	M
layout	tasksTimer@CryptoD/menuitem.js	/^    var layout = new St.BoxLayout({$/;"	V
local_only	tasksTimer@CryptoD/prefs.js	/^        local_only: false,$/;"	P
log	install_local.sh	/^log() {$/;"	f
logObjectPretty	tasksTimer@CryptoD/utils.js	/^function logObjectPretty(obj) {$/;"	F
logger	tasksTimer@CryptoD/alarm_timer.js	/^var logger = new Logger('kt alarm timer');$/;"	V
logger	tasksTimer@CryptoD/indicator.js	/^	  get logger() {$/;"	M
logger	tasksTimer@CryptoD/menuitem.js	/^var logger = new Logger('kt menuitem');$/;"	V
lookup	tasksTimer@CryptoD/timers.js	/^  lookup(id) {$/;"	M
m2s	tasksTimer@CryptoD/hms.js	/^  m2s() {$/;"	M
matchRegex	tasksTimer@CryptoD/alarm_timer.js	/^  static matchRegex(entry) {$/;"	M
minute	tasksTimer@CryptoD/alarm_timer.js	/^  get minute() { return this._minute; }$/;"	M
minute	tasksTimer@CryptoD/alarm_timer.js	/^  set minute(m) {$/;"	M
minutes	tasksTimer@CryptoD/hms.js	/^  get minutes() {$/;"	M
minutes	tasksTimer@CryptoD/hms.js	/^  set minutes(minutes) {$/;"	M
minutes	tasksTimer@CryptoD/menuitem.js	/^      minutes: 0,$/;"	P
modal_notification	tasksTimer@CryptoD/settings.js	/^    get modal_notification() {$/;"	M
modal_notification	tasksTimer@CryptoD/settings.js	/^    set modal_notification(bool) {$/;"	M
ms	tasksTimer@CryptoD/alarm_timer.js	/^  get ms() { return this._ms; }$/;"	M
ms	tasksTimer@CryptoD/alarm_timer.js	/^  set ms(msecs) {$/;"	M
name	tasksTimer@CryptoD/alarm_timer.js	/^  get name() { return this._name; }$/;"	M
name	tasksTimer@CryptoD/alarm_timer.js	/^  set name(val) {$/;"	M
name	tasksTimer@CryptoD/menuitem.js	/^      name: "",$/;"	P
name	tasksTimer@CryptoD/menuitem.js	/^      var name = new St.Label({$/;"	V
name	tasksTimer@CryptoD/timers.js	/^  get name() {$/;"	M
name	tasksTimer@CryptoD/timers.js	/^  set name(name) {$/;"	M
name_item	tasksTimer@CryptoD/menuitem.js	/^    var name_item = new PopupMenu.PopupMenuItem("", { reactive: false } );$/;"	V
notification	tasksTimer@CryptoD/notifier.js	/^  get notification() {$/;"	M
notification	tasksTimer@CryptoD/settings.js	/^    get notification() {$/;"	M
notification	tasksTimer@CryptoD/settings.js	/^    set notification(bool) {$/;"	M
notifier	tasksTimer@CryptoD/notifier.js	/^    var notifier = new KitchenTimerNotifier(timer,$/;"	V
notifier	tasksTimer@CryptoD/timers.js	/^  get notifier() {$/;"	M
notify	tasksTimer@CryptoD/notifier.js	/^  notify(timer, text, fmt=undefined, ...args) {$/;"	M
notify	tasksTimer@CryptoD/timers.js	/^  notify(msg, ...args) {$/;"	M
now	tasksTimer@CryptoD/alarm_timer.js	/^    var now=new Date();$/;"	V
null	tasksTimer@CryptoD/prefs.js	/^                null,$/;"	V
null	tasksTimer@CryptoD/utils.js	/^        null$/;"	V
null	tasksTimer@CryptoD/utils.js	/^        null,$/;"	V
ok	tasksTimer@CryptoD/prefs.js	/^          var [ ok, iter ] = combo.get_active_iter();$/;"	V
ok	tasksTimer@CryptoD/prefs.js	/^          var [ ok, iter ] = model.iter_nth_child(null, index-1);$/;"	V
ok	tasksTimer@CryptoD/prefs.js	/^          var [ ok, iter ] = this.timers_combo.get_active_iter();$/;"	V
ok	tasksTimer@CryptoD/prefs.js	/^      var [ ok, iter ] = this.timers_combo.get_active_iter();$/;"	V
ok	tasksTimer@CryptoD/prefs.js	/^      var [ ok, iter ] = timers_combo.get_active_iter();$/;"	V
ok	tasksTimer@CryptoD/prefs.js	/^      var [ok, iter] = model.get_iter_first();$/;"	V
pack_preset_timers	tasksTimer@CryptoD/settings.js	/^    pack_preset_timers(timers) {$/;"	M
pack_quick_timers	tasksTimer@CryptoD/settings.js	/^    pack_quick_timers(timers) {$/;"	M
pack_start	tasksTimer@CryptoD/menuitem.js	/^        pack_start: true,$/;"	P
pack_timer	tasksTimer@CryptoD/settings.js	/^    pack_timer(timer, quick) {$/;"	M
pack_timers	tasksTimer@CryptoD/settings.js	/^    pack_timers(timers) {$/;"	M
panel_label	tasksTimer@CryptoD/timers.js	/^  get panel_label() {$/;"	M
panel_name	tasksTimer@CryptoD/timers.js	/^  get panel_name() {$/;"	M
parse	tasksTimer@CryptoD/menuitem.js	/^    var parse = {$/;"	O
parseTimerEntry	tasksTimer@CryptoD/menuitem.js	/^  static parseTimerEntry(entry, quick) {$/;"	M
pending	tasksTimer@CryptoD/notifier.js	/^    var [ rv, state, pending ] = ktn._player.get_state(500000);$/;"	V
pid	tasksTimer@CryptoD/utils.js	/^    var [status, pid] = GLib.spawn_async($/;"	V
playSound_callback	tasksTimer@CryptoD/notifier.js	/^	playSound_callback(ktn) {$/;"	M
play_sound	tasksTimer@CryptoD/settings.js	/^    get play_sound() {$/;"	M
play_sound	tasksTimer@CryptoD/settings.js	/^    set play_sound(bool) {$/;"	M
popup	tasksTimer@CryptoD/menus.js	/^    var popup = new PopupMenu.PopupSubMenuMenuItem(text);$/;"	V
preferencesBuilder	tasksTimer@CryptoD/prefs.js	/^  var preferencesBuilder = new PreferencesBuilder();$/;"	V
presets_item	tasksTimer@CryptoD/menus.js	/^            var presets_item = new PopupMenu.PopupMenuItem(preset_timers_label, { reactive: false } );$/;"	V
pretty	tasksTimer@CryptoD/hms.js	/^  pretty() {$/;"	M
progress_gicon	tasksTimer@CryptoD/indicator.js	/^    progress_gicon(degrees) {$/;"	M
puts	install_local.sh	/^puts() {$/;"	f
quick	tasksTimer@CryptoD/menuitem.js	/^      quick: quick,$/;"	P
quick	tasksTimer@CryptoD/timers.js	/^  get quick() {$/;"	M
quick	tasksTimer@CryptoD/timers.js	/^  set quick(bool) {$/;"	M
quick_item	tasksTimer@CryptoD/menus.js	/^            var quick_item = new PopupMenu.PopupMenuItem(quick_timers_label, { reactive: false } );$/;"	V
re	tasksTimer@CryptoD/alarm_timer.js	/^    var re = \/^(?<name>[^@]+)?@\\s*(?<h>\\d+):?(?<m>\\d+)?:?(?<s>\\d+)?[.]?(?<ms>\\d+)?\\s*(?<ampm>a\\.?m\\.?|p\\.?m\\.?)?$\/i;$/;"	V
re	tasksTimer@CryptoD/menuitem.js	/^    var re = \/(?<name>([^\\s]+\\s)*?)?(?<t1>\\d+)?\\s*:?\\s*(?<t2>[\\d]+)?\\s*:?\\s*(?<t3>\\d+)?$\/;$/;"	V
re	tasksTimer@CryptoD/menuitem.js	/^    var re = \/^(?<name>.*?)\\s+(?<t1>\\d+):(?<t2>[\\d]+):(?<t3>\\d+)$\/;$/;"	V
re	tasksTimer@CryptoD/menuitem.js	/^   var re = \/^((?<t1>\\d+):)?((?<t2>\\d+):)?(?<t3>\\d+)$\/;$/;"	V
re_alarm	tasksTimer@CryptoD/menuitem.js	/^  static re_alarm(parse) {$/;"	M
re_hms	tasksTimer@CryptoD/menuitem.js	/^  static re_hms(parse) {$/;"	M
re_name_hms	tasksTimer@CryptoD/menuitem.js	/^  static re_name_hms(parse) {$/;"	M
re_nan	tasksTimer@CryptoD/menus.js	/^    var re_nan=\/[^0-9]\/$/;"	V
re_wildcard	tasksTimer@CryptoD/menuitem.js	/^  static re_wildcard(parse) {$/;"	M
reason	tasksTimer@CryptoD/timers.js	/^    var reason;$/;"	V
rebuild_menu	tasksTimer@CryptoD/indicator.js	/^    rebuild_menu() {$/;"	M
refresh	tasksTimer@CryptoD/timers.js	/^  refresh() {$/;"	M
refresh_with	tasksTimer@CryptoD/timers.js	/^  refresh_with(settings_timer) {$/;"	M
remove	tasksTimer@CryptoD/timers.js	/^  remove(timer, i=undefined) {$/;"	M
reset	tasksTimer@CryptoD/timers.js	/^  get reset() {$/;"	M
reset	tasksTimer@CryptoD/timers.js	/^  set reset(bool) {$/;"	M
restoreRunningTimers	tasksTimer@CryptoD/timers.js	/^  restoreRunningTimers() {$/;"	M
run	install_local.sh	/^run() {$/;"	f
run_state	tasksTimer@CryptoD/timers.js	/^        var run_state = {$/;"	O
running	tasksTimer@CryptoD/settings.js	/^    get running() {$/;"	M
running	tasksTimer@CryptoD/settings.js	/^    set running(json) {$/;"	M
running	tasksTimer@CryptoD/timers.js	/^    var running=[];$/;"	A
running	tasksTimer@CryptoD/timers.js	/^  get running() {$/;"	M
running	tasksTimer@CryptoD/timers.js	/^  set running(bool) {$/;"	M
running_item	tasksTimer@CryptoD/menus.js	/^    var running_item;$/;"	V
running_timers	tasksTimer@CryptoD/timers.js	/^    var running_timers = [...this].filter(timer => timer.running);$/;"	A
running_timers	tasksTimer@CryptoD/timers.js	/^    var running_timers = [...this].filter(timer => timer.running);$/;"	F
rv	tasksTimer@CryptoD/notifier.js	/^    var [ rv, state, pending ] = ktn._player.get_state(500000);$/;"	V
s2s	tasksTimer@CryptoD/hms.js	/^  s2s() {$/;"	M
saveRunningTimers	tasksTimer@CryptoD/timers.js	/^  saveRunningTimers() {$/;"	M
save_quick_timers	tasksTimer@CryptoD/settings.js	/^    get save_quick_timers() {$/;"	M
save_quick_timers	tasksTimer@CryptoD/settings.js	/^    set save_quick_timers(bool) {$/;"	M
second	tasksTimer@CryptoD/alarm_timer.js	/^  get second() { return this._second; }$/;"	M
second	tasksTimer@CryptoD/alarm_timer.js	/^  set second(s) {$/;"	M
seconds	tasksTimer@CryptoD/hms.js	/^  get seconds() {$/;"	M
seconds	tasksTimer@CryptoD/hms.js	/^  set seconds(seconds) {$/;"	M
seconds	tasksTimer@CryptoD/menuitem.js	/^      seconds: 0,$/;"	P
setInterval	tasksTimer@CryptoD/utils.js	/^function setInterval(func, delay, ...args) {$/;"	F
setTimeout	tasksTimer@CryptoD/utils.js	/^function setTimeout(func, delay, ...args) {$/;"	F
set_panel_label	tasksTimer@CryptoD/timers.js	/^  set_panel_label(text) {$/;"	M
set_panel_name	tasksTimer@CryptoD/timers.js	/^  set_panel_name(text, has_name=true) {$/;"	M
settings	tasksTimer@CryptoD/indicator.js	/^	  get settings() {$/;"	M
settings	tasksTimer@CryptoD/timers.js	/^  get settings() {$/;"	M
settings_json	tasksTimer@CryptoD/prefs.js	/^      let settings_json = 'kitchen_timer_settings.json' ;$/;"	V
settings_json	tasksTimer@CryptoD/prefs.js	/^      let settings_json = 'kitchen_timer_settings.json';$/;"	V
show_label	tasksTimer@CryptoD/settings.js	/^    get show_label() {$/;"	M
show_label	tasksTimer@CryptoD/settings.js	/^    set show_label(bool) {$/;"	M
show_progress	tasksTimer@CryptoD/settings.js	/^    get show_progress() {$/;"	M
show_progress	tasksTimer@CryptoD/settings.js	/^    set show_progress(bool) {$/;"	M
show_time	tasksTimer@CryptoD/settings.js	/^    get show_time() {$/;"	M
show_time	tasksTimer@CryptoD/settings.js	/^    set show_time(bool) {$/;"	M
signal_id	tasksTimer@CryptoD/utils.js	/^            signal_id: signal_id$/;"	P
sort_by_duration	tasksTimer@CryptoD/settings.js	/^    get sort_by_duration() {$/;"	M
sort_by_duration	tasksTimer@CryptoD/settings.js	/^    set sort_by_duration(bool) {$/;"	M
sort_by_duration	tasksTimer@CryptoD/timers.js	/^  get sort_by_duration() {$/;"	M
sort_by_running	tasksTimer@CryptoD/timers.js	/^  sort_by_running() {$/;"	M
sort_descending	tasksTimer@CryptoD/settings.js	/^    get sort_descending() {$/;"	M
sort_descending	tasksTimer@CryptoD/settings.js	/^    set sort_descending(bool) {$/;"	M
sort_descending	tasksTimer@CryptoD/timers.js	/^  get sort_descending() {$/;"	M
sorted	tasksTimer@CryptoD/timers.js	/^  sorted(params={running:true}) {$/;"	M
sound_enabled	tasksTimer@CryptoD/notifier.js	/^  get sound_enabled() {$/;"	M
sound_file	tasksTimer@CryptoD/notifier.js	/^  get sound_file() {$/;"	M
sound_file	tasksTimer@CryptoD/settings.js	/^    get sound_file() {$/;"	M
sound_file	tasksTimer@CryptoD/settings.js	/^    set sound_file(path) {$/;"	M
sound_loops	tasksTimer@CryptoD/notifier.js	/^  get sound_loops() {$/;"	M
sound_loops	tasksTimer@CryptoD/settings.js	/^    get sound_loops() {$/;"	M
sound_loops	tasksTimer@CryptoD/settings.js	/^    set sound_loops(loops) {$/;"	M
source	tasksTimer@CryptoD/notifier.js	/^  get source() {$/;"	M
spawn	tasksTimer@CryptoD/utils.js	/^function spawn(command, callback) {$/;"	F
start	tasksTimer@CryptoD/timers.js	/^  start() {$/;"	M
state	tasksTimer@CryptoD/notifier.js	/^    var [ rv, state, pending ] = ktn._player.get_state(500000);$/;"	V
status	tasksTimer@CryptoD/utils.js	/^    var [status, pid] = GLib.spawn_async($/;"	V
still_valid	tasksTimer@CryptoD/timers.js	/^  still_valid(settings_timers) {$/;"	M
stop	tasksTimer@CryptoD/menuitem.js	/^    stop() {$/;"	M
stop	tasksTimer@CryptoD/timers.js	/^  stop() {$/;"	M
stop_callback	tasksTimer@CryptoD/timers.js	/^  stop_callback(now) {$/;"	M
stop_player	tasksTimer@CryptoD/notifier.js	/^  stop_player() {$/;"	M
style_class	tasksTimer@CryptoD/menuitem.js	/^      style_class: null$/;"	P
subject	tasksTimer@CryptoD/utils.js	/^            subject: subject,$/;"	P
switch	tasksTimer@CryptoD/settings.js	/^        switch(key) {$/;"	M
tbid	tasksTimer@CryptoD/timers.js	/^    var tbid = this.filter(timer => timer.id == id);$/;"	F
text	tasksTimer@CryptoD/menuitem.js	/^    var text="%s %02d:%02d:%02d".format(this._name, this._hslider.value, this._mslider.value, this._sslider.value);$/;"	V
text	tasksTimer@CryptoD/notifier.js	/^                                              text,$/;"	V
text	tasksTimer@CryptoD/timers.js	/^    var text = "%s due at %s".format(this.name, this.end_time())$/;"	V
time	tasksTimer@CryptoD/timers.js	/^    var time=new Date(now).toLocaleTimeString();$/;"	V
time_number	tasksTimer@CryptoD/menus.js	/^  time_number(text) {$/;"	M
timer	tasksTimer@CryptoD/menuitem.js	/^    var timer = new Timer(result.name, result.hms.toSeconds());$/;"	V
timer	tasksTimer@CryptoD/menuitem.js	/^  get timer() {$/;"	M
timer	tasksTimer@CryptoD/prefs.js	/^        var timer={};$/;"	O
timer	tasksTimer@CryptoD/prefs.js	/^      var timer = {}$/;"	O
timer	tasksTimer@CryptoD/timers.js	/^    var timer = new Timer(result.name, result.hms.toSeconds());$/;"	V
timer	tasksTimer@CryptoD/timers.js	/^    var timer = new Timer(settings_timer.name, settings_timer.duration, settings_timer.id);$/;"	V
timer_by_id	tasksTimer@CryptoD/timers.js	/^  timer_by_id(id) {$/;"	M
timer_callback	tasksTimer@CryptoD/timers.js	/^  timer_callback(timer) {$/;"	M
timer_icon	tasksTimer@CryptoD/menuitem.js	/^      var timer_icon = new St.Icon({$/;"	V
timer_item	tasksTimer@CryptoD/menus.js	/^      var timer_item = new Mitem.KitchenTimerMenuItem(timer, this._menu);$/;"	V
timers	tasksTimer@CryptoD/indicator.js	/^	  get timers() {$/;"	M
timers	tasksTimer@CryptoD/menus.js	/^  get timers() {$/;"	M
timers	tasksTimer@CryptoD/prefs.js	/^      var timers = [];$/;"	A
timers	tasksTimer@CryptoD/settings.js	/^    get timers() {$/;"	M
timers	tasksTimer@CryptoD/timers.js	/^  get timers() {$/;"	M
timersInstance	tasksTimer@CryptoD/timers.js	/^var timersInstance = new Timers();$/;"	V
timers_array	tasksTimer@CryptoD/timers.js	/^    var timers_array = [...this];$/;"	A
toName	tasksTimer@CryptoD/hms.js	/^  toName() {$/;"	M
toSeconds	tasksTimer@CryptoD/hms.js	/^  toSeconds() {$/;"	M
toString	tasksTimer@CryptoD/hms.js	/^  toString(compact) {$/;"	M
toString	tasksTimer@CryptoD/timers.js	/^  toString() {$/;"	M
to_s	tasksTimer@CryptoD/hms.js	/^  static to_s(v) {$/;"	M
unpack_preset_timers	tasksTimer@CryptoD/settings.js	/^    unpack_preset_timers(settings_timers=[]) {$/;"	M
unpack_quick_timers	tasksTimer@CryptoD/settings.js	/^    unpack_quick_timers(settings_timers=[]) {$/;"	M
unpack_timer	tasksTimer@CryptoD/settings.js	/^    unpack_timer(timer_settings, quick) {$/;"	M
unpack_timers	tasksTimer@CryptoD/settings.js	/^    unpack_timers() {$/;"	M
update_time	tasksTimer@CryptoD/menuitem.js	/^  update_time() {$/;"	M
uuid	tasksTimer@CryptoD/utils.js	/^function uuid(id=undefined) {$/;"	F
validate_integer	tasksTimer@CryptoD/menus.js	/^  validate_integer(text, min=0) {$/;"	M
value	tasksTimer@CryptoD/menuitem.js	/^      slider.value = (this._value-this._min)\/this._max;$/;"	M
value	tasksTimer@CryptoD/menuitem.js	/^    this._slider.value = (val-this._min)\/this._max;$/;"	M
value	tasksTimer@CryptoD/menuitem.js	/^  get value() {$/;"	M
value	tasksTimer@CryptoD/menuitem.js	/^  set value(val) {$/;"	M
warn	install_local.sh	/^warn() {$/;"	f
warn	tasksTimer@CryptoD/logger.js	/^    warn(format, ...args) {$/;"	M
wrappedFunc	tasksTimer@CryptoD/utils.js	/^    const wrappedFunc = () => {$/;"	F
x_expand	tasksTimer@CryptoD/menuitem.js	/^        x_expand: false,$/;"	P
x_expand	tasksTimer@CryptoD/menuitem.js	/^        x_expand: true,$/;"	P
x_expand	tasksTimer@CryptoD/menuitem.js	/^      x_expand: true$/;"	P
x_expand	tasksTimer@CryptoD/menuitem.js	/^      x_expand: true,$/;"	P
y_expand	tasksTimer@CryptoD/indicator.js	/^          y_expand: false,$/;"	P
